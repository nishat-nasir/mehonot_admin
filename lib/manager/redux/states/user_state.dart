import 'package:mehonot_admin/manager/models/User/ReqModels/user_md_req.dart';import '../../../presentation/template/template.dart';import '../../models/Address/address_md.dart';import '../../models/Job/job_md.dart';import '../../models/User/user_job_relation_md.dart';import '../../models/User/user_md.dart';import '../../models/User/user_profile_md.dart';import '../../models/resume/education_md.dart';import '../../models/resume/experience_md.dart';import '../../models/resume/skill_md.dart';@immutableclass UserState {  final UserModel userData;  final UserProfileModel userProfileData;  final UserJobRelationMd userJobRelationData;  final List<JobModel> mySavedJobsJobData;  const UserState({    required this.userData,    required this.userProfileData,    required this.userJobRelationData,    required this.mySavedJobsJobData,  });  factory UserState.initial() {    return UserState(      userData: UserModel(        userId: "",        userProfileId: "",        isAdmin: false,        phoneNumber: "",        password: "",      ),      userProfileData: UserProfileModel(        userId: "",        userProfileId: "",        userJobRelationId: "",        firstName: "",        lastName: "",        createdDate: "",        email: "",        contactNumber: "",        address: AddressModel(          division: "",          district: "",          city: "",          area: "",        ),        profileImage: "",        education: [],        experience: [],        skill: [],        birthday: "",        positionTitle: "",        bio: "",      ),      userJobRelationData: UserJobRelationMd(        userProfileId: "",        myJobsIds: [],        savedJobsIds: [],        appliedJobsIds: [],      ),      mySavedJobsJobData: [],    );  }  UserState copyWith({    UserModel? userData,    UserProfileModel? userProfileData,    UserJobRelationMd? userJobRelationData,    List<JobModel>? mySavedJobsJobData,  }) {    return UserState(      userData: userData ?? this.userData,      userProfileData: userProfileData ?? this.userProfileData,      userJobRelationData: userJobRelationData ?? this.userJobRelationData,      mySavedJobsJobData: mySavedJobsJobData ?? this.mySavedJobsJobData,    );  }}///------------------Update User Action --------- ///class UpdateUserStateAction {  final UserModel? userData;  final UserProfileModel? userProfileData;  final UserJobRelationMd? userJobRelationData;  final List<JobModel>? mySavedJobsJobData;  UpdateUserStateAction({    this.userData,    this.userProfileData,    this.userJobRelationData,    this.mySavedJobsJobData,  });}///------------------User Action --------- ///class GetUpdateAccountAction {  UserModel userData;  BuildContext context;  GetUpdateAccountAction({required this.userData, required this.context});}class GetUpdateProfileAction {  UserProfileModel userProfileData;  GetUpdateProfileAction({required this.userProfileData});}class GetUserProfileAction {  String userProfileId;  BuildContext context;  GetUserProfileAction({required this.userProfileId, required this.context});}class GetUserJobRelationAction {  String userProfileId;  String userJobRelationId;  BuildContext context;  GetUserJobRelationAction(      {required this.userProfileId,      required this.userJobRelationId,      required this.context});}class GetUpdateSavedJobsAction {  JobModel jobData;  GetUpdateSavedJobsAction({required this.jobData});}class GetUpdateSavedJobsRemoveReqAction {  List<String> jobIdList;  GetUpdateSavedJobsRemoveReqAction({required this.jobIdList});}class GetAllMySavedJobsAction {  GetAllMySavedJobsAction();}class GetLocalUserIdAction {}class SetLocalUserIdAction {  String userId;  SetLocalUserIdAction(this.userId);}class GetPostFeedbackAction {  UserModel userData;  String feedback;  int rating;  GetPostFeedbackAction(      {required this.userData, required this.feedback, required this.rating});}