import '../../template/template.dart';import '../../template/theme/theme_button.dart';class SidebarItem extends StatefulWidget {  HeroIcons? icon;  double width;  double height;  String text;  VoidCallback? onTap;  bool isActive;  String? svgIcon;  bool? isSolid;  SidebarItem({    Key? key,    required this.text,    this.icon,    this.isActive = false,    this.width = double.infinity,    this.height = 91,    this.onTap,    this.svgIcon,    this.isSolid,  }) : super(key: key);  @override  State<SidebarItem> createState() => _SidebarItemState();}class _SidebarItemState extends State<SidebarItem>    with TickerProviderStateMixin {  @override  Widget build(BuildContext context) {    return ElevatedButton(      style: sidebarTabButtonTheme(widget.isActive),      onPressed: () {        if (widget.onTap != null) {          widget.onTap!();        }      },      child: _buildMain(),    );  }  Widget _buildMain() {    return Container(      // width: widget.width.w,      height: widget.height.h,      // color: widget.isActive ? ThemeColors.coolgray100 : ThemeColors.white,      padding: EdgeInsets.symmetric(horizontal: 24.w),      child: Row(        crossAxisAlignment: CrossAxisAlignment.center,        mainAxisAlignment: MainAxisAlignment.start,        children: [          if (widget.icon != null)            HeroIcon(widget.icon!,                size: 40.h,                solid: widget.isSolid ?? false,                color: ThemeColors.coolgray600),          if (widget.icon == null && widget.svgIcon != null)            SvgPicture.asset(widget.svgIcon!,                height: 40.h, color: ThemeColors.coolgray600),          if (widget.icon != null || widget.svgIcon != null)            SizedBox(width: 21.w),          SizedText(            text: widget.text,            textStyle:                ThemeTextRegular.k12.apply(color: ThemeColors.coolgray900),          ),        ],      ),    );  }}