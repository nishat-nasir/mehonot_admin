import 'dart:convert';import 'package:flutter_quill/flutter_quill.dart';import '../../template/template.dart';class QuillViewPage extends StatefulWidget {  final String jsonTextForQuill;  final QuillController? quillController;  final double? height;  final List<BoxShadow>? boxShadow;  final double? radius;  final Color? bgColor;  const QuillViewPage({    super.key,    required this.jsonTextForQuill,    this.quillController,    this.height,    this.boxShadow,    this.radius,    this.bgColor,  });  @override  State<QuillViewPage> createState() => _QuillViewPageState();}class _QuillViewPageState extends State<QuillViewPage> {  QuillController quillText = QuillController.basic();  @override  Widget build(BuildContext context) {    convertJsonToQuillController(widget.jsonTextForQuill);    return Container(      width: double.infinity,      // height: widget.height ?? 1000.h,      padding: EdgeInsets.symmetric(horizontal: 42.w, vertical: 44.h),      decoration: BoxDecoration(          color: widget.bgColor ??              (isDark(context)                  ? PrsmColorsDark.formContainerBgColor                  : ThemeColors.white),          borderRadius: BorderRadius.circular(widget.radius ?? 30.r),          boxShadow: widget.boxShadow),      child: widget.quillController != null          ? QuillEditor(              controller: widget.quillController!,              readOnly: true,              focusNode: FocusNode(),              scrollController: ScrollController(),              scrollable: true,              padding: EdgeInsets.zero,              autoFocus: false,              expands: false,              showCursor: false,              enableInteractiveSelection: false,              enableSelectionToolbar: false,            )          : (widget.jsonTextForQuill != "" &&                  widget.jsonTextForQuill.isNotEmpty &&                  widget.jsonTextForQuill.contains('"insert":'))              ? QuillEditor(                  controller: quillText,                  readOnly: true,                  focusNode: FocusNode(),                  scrollController: ScrollController(),                  scrollable: true,                  padding: EdgeInsets.zero,                  autoFocus: false,                  expands: false,                  showCursor: false,                  enableInteractiveSelection: false,                  enableSelectionToolbar: false,                )              : const SizedText(text: "No text available"),    );  }  void convertJsonToQuillController(String jsonText) {    if (widget.jsonTextForQuill == "" ||        widget.jsonTextForQuill.isEmpty ||        !widget.jsonTextForQuill.contains('"insert":')) {      return;    }    String jsonString = jsonText;    List<dynamic> jsonList = json.decode(jsonString);    Delta delta = Delta.fromJson(jsonList);    Document document = Document.fromJson(delta.toJson());    setState(() {      quillText = QuillController(        document: document,        selection: const TextSelection.collapsed(offset: 0),      );    });  }}