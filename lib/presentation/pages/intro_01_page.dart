import 'package:auto_route/auto_route.dart';import 'package:flutter/services.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:lottie/lottie.dart';import 'package:intro_slider/intro_slider.dart';import '../template/template.dart';@RoutePage()class Intro01Page extends StatefulWidget {  @override  Intro01PageState createState() => Intro01PageState();} // ------------------ Custom config ------------------class Intro01PageState extends State<Intro01Page> {  List<ContentConfig> listContentConfig = [];  DateTime timeBackPressed = DateTime.now();  bool isliking = false;  String likingpostid = "";  bool startLiking = false;  Color bgClr = ThemeColors.coolgray600;  @override  void initState() {    super.initState();    bgClr = isDark(context) ? ThemeColors.white : ThemeColors.coolgray600;    listContentConfig.add(ContentConfig(      backgroundColor: bgClr,      centerWidget: Column(        children: [          SizedText(            text: 'Welcome to',            textStyle:                ThemeTextRegular.k22.copyWith(color: ThemeColors.coolgray100),          ),          LottieBuilder.asset(            'assets/lotties/hello_lottie.json',            reverse: true,            repeat: true,            frameRate: FrameRate.composition,          ),          SizedText(            text: 'APP NAME',            textStyle:                ThemeTextBold.k34.copyWith(color: ThemeColors.coolgray100),          )        ],      ),    ));    listContentConfig.add(ContentConfig(      backgroundColor: bgClr,      centerWidget: Column(        children: [          LottieBuilder.asset(            'assets/lotties/post_lottie.json',            height: 250.h,            reverse: true,            repeat: true,            frameRate: FrameRate.max,          ),          SizedText(            text: 'Here you can \n Post memes',            textStyle:                ThemeTextBold.k26.copyWith(color: ThemeColors.coolgray100),          )        ],      ),    ));    listContentConfig.add(ContentConfig(      backgroundColor: bgClr,      centerWidget: Column(        children: [          LottieBuilder.asset(            'assets/lotties/event_lottie.json',            height: 250.h,            reverse: true,            repeat: true,            frameRate: FrameRate.max,          ),          SizedText(            text: 'Here you can \n Join/Create an event',            textStyle:                ThemeTextBold.k26.copyWith(color: ThemeColors.coolgray100),          )        ],      ),    ));    listContentConfig.add(ContentConfig(        backgroundColor: bgClr,        centerWidget: Column(children: [          LottieBuilder.asset(            'assets/lotties/help_lottie.json',            height: 250.h,            reverse: true,            repeat: true,            frameRate: FrameRate.max,          ),          SizedText(              text: 'Here you can \n Ask for help',              textStyle:                  ThemeTextBold.k26.copyWith(color: ThemeColors.coolgray100))        ])));  }  void onDonePress() {    // Do what you want appStore.dispatch( //     NavigateToAction(to: AppRoutes.loginPageRoute, replace: true));  }  void onNextPress() {    print("onNextPress caught");  }  Widget renderNextBtn() {    return const Icon(Icons.navigate_next,        color: ThemeColors.coolgray100, size: 35.0);  }  Widget renderDoneBtn() {    return const Icon(Icons.done, color: ThemeColors.coolgray100, size: 35.0);  }  Widget renderSkipBtn() {    return const Icon(Icons.skip_next,        color: ThemeColors.coolgray100, size: 35.0);  }  ButtonStyle myButtonStyle() {    return ButtonStyle(      shape: MaterialStateProperty.all<OutlinedBorder>(const StadiumBorder()),      backgroundColor:          MaterialStateProperty.all<Color>(ThemeColors.coolgray500),      overlayColor: MaterialStateProperty.all<Color>(ThemeColors.coolgray100),    );  }  @override  Widget build(BuildContext context) {    return WillPopScope(      onWillPop: _onWillPop,      child: IntroSlider(        // List slides slides: slides, // Skip button renderSkipBtn:        skipButtonStyle: myButtonStyle(),        // Next button        renderNextBtn: renderNextBtn(),        onNextPress: onNextPress,        nextButtonStyle: myButtonStyle(),        // Done button        renderDoneBtn: renderDoneBtn(),        onDonePress: onDonePress,        doneButtonStyle: myButtonStyle(),        // Dot indicator // colorDot: ThemeColors.coolgray700, // colorActiveDot: ThemeColors.coolgray100, // sizeDot: 13.0,        listContentConfig: listContentConfig,      ),    );  }  Future<bool> _onWillPop() {    final difference = DateTime.now().difference(timeBackPressed);    final isExitWarning = difference >= const Duration(seconds: 2);    timeBackPressed = DateTime.now();    if (isExitWarning) {      const message = 'Press back again to exit';      Fluttertoast.showToast(          msg: message,          fontSize: 18,          backgroundColor: ThemeColors.white,          textColor: ThemeColors.bluegray800);      return Future.value(false);    } else {      SystemChannels.platform.invokeMethod('SystemNavigator.pop');      return Future.value(false);    }  }}