import 'package:auto_route/auto_route.dart';import 'package:mehonot_admin/manager/models/Job/job_md.dart';import 'package:mehonot_admin/manager/navigation/router.gr.dart';import 'package:mehonot_admin/manager/redux/states/ads_state.dart';import '../../../template/template.dart';import '../../../utils/constants.dart';import 'ads_helper_functions.dart';import 'job_ads_create_page.dart';@RoutePage()class JobAdsListPage extends StatefulWidget {  const JobAdsListPage({Key? key}) : super(key: key);  @override  State<JobAdsListPage> createState() => _JobAdsListPageState();}class _JobAdsListPageState extends State<JobAdsListPage> {  Division selectedDivision = Division.Dhaka;  List<JobModel> jobList = [];  @override  Widget build(BuildContext context) {    return StoreConnector<AppState, AppState>(        converter: (store) => store.state,        builder: (_, state) {          return SizedBox(              height: MediaQuery.of(context).size.height - 300,              child: Padding(                  padding: EdgeInsets.all(20.w),                  child: SingleChildScrollView(                      child: SpacedColumn(                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                        _buildTopSec(),                        _buildJobAdsList(state)                      ]))));        });  }  _buildTopSec() {    return SpacedRow(        crossAxisAlignment: CrossAxisAlignment.center,        mainAxisAlignment: MainAxisAlignment.spaceBetween,        children: [          SizedBox(              width: 500.w,              child: PrsmDropdown(                  listValues:                      Constants.jobDivisionList.map((e) => e.name).toList(),                  value: selectedDivision.name,                  onChanged: (value) async {                    setState(() {                      selectedDivision = Constants.jobDivisionList                          .firstWhere((element) => element.name == value);                    });                    await appStore.dispatch(                        GetJobAdsDetailAction(division: selectedDivision));                  })),          SizedBox(              width: 500.w,              child: PrimaryButton(                  buttonText: "Create Job Ad",                  btnTextStyle: ThemeTextRegular.k12,                  linkTypeBtnColor: ThemeColors.blue800,                  onPressed: () {                    context.pushRoute(const JobAdCreateRoute());                  })),        ]);  }  _buildJobAdsList(AppState state) {    List<Widget> listWidget = [];    List<JobModel> jobLists = [];    switch (selectedDivision) {      case Division.Dhaka:        jobLists = state.adsState.dhakaJobAds;        break;      case Division.Chittagong:        jobLists = state.adsState.chittagongJobAds;        break;      case Division.Rajshahi:        jobLists = state.adsState.rajshahiJobAds;        break;      case Division.Khulna:        jobLists = state.adsState.khulnaJobAds;        break;      case Division.Barisal:        jobLists = state.adsState.barisalJobAds;        break;      case Division.Sylhet:        jobLists = state.adsState.sylhetJobAds;        break;      case Division.Rangpur:        jobLists = state.adsState.rangpurJobAds;        break;      case Division.Mymensingh:        jobLists = state.adsState.mymensinghJobAds;        break;    }    for (int i = 0; i < jobLists.length; i++) {      listWidget.add(PrsmJobContainer(          jobModel: jobLists[i],          onTap: () async {            await context.pushRoute(JobDetailsRouter(                bottomWidget: PrimaryButton(                  onPressed: () async {                    await createOrRmvJobAdFunc(                        job: jobLists[i], context: context);                    jobLists.remove(jobLists[i]);                  },                  buttonText: await getTheBtnText(job: jobLists[i]),                  buttonType: ButtonType.Ghost,                ),                jobModel: jobLists[i]));          }));    }    return SpacedColumn(      verticalSpace: 20,      children: listWidget,    );  }}