import 'package:auto_route/annotations.dart';import '../../template/template.dart';import '../../utils/constants.dart';@RoutePage()class DashboardPage extends StatefulWidget {  const DashboardPage({Key? key}) : super(key: key);  @override  State<DashboardPage> createState() => _DashboardPageState();}class _DashboardPageState extends State<DashboardPage> {  @override  Widget build(BuildContext context) {    return StoreConnector<AppState, AppState>(        converter: (store) => store.state,        builder: (_, state) {          return Padding(              padding: EdgeInsets.all(40.w),              child: SpacedColumn(                crossAxisAlignment: CrossAxisAlignment.start,                children: [_buildDivisionJobStatusSec(state)],              ));        });  }  Widget _buildDivisionJobStatusSec(AppState state) {    List<Widget> list = [];    List<String> divisionNameList =    []; //IMP : divisionNameList.length should be 8    for (int i = 0; i < Constants.jobDivisionList.length; i++) {      divisionNameList.add(Constants.jobDivisionList[i].name);    }    List<Color> colorList = [      ThemeColors.amber700,      ThemeColors.blue700,      ThemeColors.green700,      ThemeColors.purple700,      ThemeColors.red700,      ThemeColors.teal700,      ThemeColors.yellow700,      ThemeColors.pink700,    ];    List<Color> bgColorList = [      ThemeColors.amber100,      ThemeColors.blue100,      ThemeColors.green100,      ThemeColors.purple100,      ThemeColors.red100,      ThemeColors.teal100,      ThemeColors.yellow100,      ThemeColors.pink100,    ];    List<int> jobsCount = [      state.initState.countDhkJobs,      state.initState.countCtgJobs,      state.initState.countRajJobs,      state.initState.countSylJobs,      state.initState.countBarJobs,      state.initState.countRngJobs,      state.initState.countKhlJobs,      state.initState.countMymJobs,    ];    for (int i = 0; i < 8; i++) {      list.add(singleStatus(        divisionName: divisionNameList[i],        totalJobs: "Job List: ${jobsCount[i]}",        jobReq: "Job Req: 0",        bgColor: bgColorList[i],        color: colorList[i],      ));    }    list.add(      singleStatus(        divisionName: "Total",        totalJobs: "Job List: ${state.initState.countAllJobs}",        jobReq: "Job Req: 0",        bgColor: ThemeColors.blue100,        color: ThemeColors.blue700,      ),    );    return SpacedColumn(        crossAxisAlignment: CrossAxisAlignment.start,        mainAxisAlignment: MainAxisAlignment.start,        verticalSpace: 20,        children: [          SizedText(text: "Dashboard"),          Center(              child: Wrap(                spacing: 40.w,                runSpacing: 40.h,                children: list,              ))        ]);  }  Widget singleStatus({    required String divisionName,    required String totalJobs,    required String jobReq,    required Color bgColor,    required Color color,  }) {    return Container(        width: 300.w,        height: 300.h,        padding: EdgeInsets.all(20.w),        decoration: BoxDecoration(          color: bgColor,          borderRadius: BorderRadius.circular(20.r),        ),        child: SpacedColumn(            crossAxisAlignment: CrossAxisAlignment.start,            mainAxisAlignment: MainAxisAlignment.center,            verticalSpace: 20,            children: [              SizedText(text: divisionName, textStyle: ThemeTextRegular.k10),              SizedText(                  text: totalJobs,                  textStyle: ThemeTextMedium.k12                      .copyWith(color: color, letterSpacing: -.5)),              SizedText(                  text: jobReq,                  textStyle: ThemeTextExtraBold.k10                      .copyWith(color: ThemeColors.amber700)),            ]));  }}